heat_template_version: 2016-10-14

description: Test template, which reproduces failure of block_device_mapping_v2 using sdX device names

parameters:

  name:
    type: string
    label: Name
    description: Name
    default: test_heat_server_device_mapping

  key_name:
    type: string
    label: Key name
    description: Key name of keypair
    default: ag-KeyPair

  flavor:
    type: string
    label: Flavor
    description: Name of the flavor
    default: s2.large.2

  availability_zone:
    type: string
    description: The Availability Zone to launch the instance.
    default: eu-de-02

  volume_size_host:
    type: number
    description: Sys storage size of each node
    default: 6

  secgrp:
    type: comma_delimited_list
    label: Security groups
    description: Security group resources
    default: default

  image:
    type: string
    label: Image
    description: Name of the image
    default: Fedora-Atomic-27-20180326

resources:

  # Network Components
  network:
    type: OS::Neutron::Net
    properties:
      name: test-network

  subnet:
    type: OS::Neutron::Subnet
    properties:
      cidr: 192.168.0.0/24
      network: { get_resource: network }
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
      name: test-subnet

  router:
    type: OS::Neutron::Router
    properties:
      name: test-case-router
      external_gateway_info:
        enable_snat: true
        network: admin_external_net

  router_interface:
    type: OS::Neutron::RouterInterface
    depends_on: [ subnet ]
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnet }

  server:
    type: OS::Nova::Server
    properties:
      name:      { get_param: name }
      key_name:  { get_param: key_name }
      flavor:    { get_param: flavor }
      availability_zone: { get_param: availability_zone }
      block_device_mapping_v2:
        - {"device_name": "sda", "volume_id": { get_resource: cinder_volume_os }, "delete_on_termination": true}
        - {"device_name": "sdb", "volume_id": { get_resource: cinder_volume_local }, "boot_index": -1, "delete_on_termination": true}

      networks:
        - subnet: { get_resource: subnet }
      security_groups: { get_param: secgrp }

  cinder_volume_os:
    type: OS::Cinder::Volume
    properties:
      size: { get_param: volume_size_host }
      availability_zone: { get_param: availability_zone }
      image: { get_param: image }
      metadata:
        purpose: os storage

  cinder_volume_local:
    type: OS::Cinder::Volume
    properties:
      size: 1
      availability_zone: { get_param: availability_zone }
      metadata:
        purpose: additional storage
